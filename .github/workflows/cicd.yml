name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v4
      - name: build Docker Image
        run: docker build . --file Dockerfile --tag workflow-test

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: $ {{ secrets.DOCKERHUB_USERNAME }}
#          password: $ {{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build and push backend image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: $ {{ secrets.DOCKERHUB_USERNAME }}/ai-screener-backend:latest


#  deploy:
#    runs-on: ubuntu-latest
#    needs: docker-build-and-push
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: $ {{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: $ {{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#
#      - name: Deploy to ECS
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ecs-task-def.json
#          service: ai-screener-service
#          cluster: ai-screener-cluster
#          wait-for-service-stability: true
